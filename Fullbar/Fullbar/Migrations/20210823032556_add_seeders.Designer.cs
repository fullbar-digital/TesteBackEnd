// <auto-generated />
using System;
using Fullbar.Entities.Persistences;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fullbar.Migrations
{
    [DbContext(typeof(FullbarDBContext))]
    [Migration("20210823032556_add_seeders")]
    partial class add_seeders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fullbar.Entities.Models.Courses.Course", b =>
                {
                    b.Property<long>("CourseID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseID = 1L,
                            Name = "Ciência da computação"
                        },
                        new
                        {
                            CourseID = 2L,
                            Name = "Engenharia da computação"
                        },
                        new
                        {
                            CourseID = 3L,
                            Name = "Engenharia de software"
                        });
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Disciplines.Discipline", b =>
                {
                    b.Property<long>("DisciplineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<double>("MinimumGrade")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DisciplineID");

                    b.HasIndex("CourseId");

                    b.ToTable("Discipline");

                    b.HasData(
                        new
                        {
                            DisciplineID = 1L,
                            CourseId = 1L,
                            MinimumGrade = 7.0,
                            Name = "Calculo 1"
                        },
                        new
                        {
                            DisciplineID = 2L,
                            CourseId = 1L,
                            MinimumGrade = 7.0,
                            Name = "Calculo 2"
                        },
                        new
                        {
                            DisciplineID = 3L,
                            CourseId = 3L,
                            MinimumGrade = 7.0,
                            Name = "Calculo 3"
                        });
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Disciplines.Grade", b =>
                {
                    b.Property<long>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DisciplineID")
                        .HasColumnType("bigint");

                    b.Property<double>("StudantGrade")
                        .HasColumnType("float");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.HasKey("GradeID");

                    b.HasIndex("DisciplineID");

                    b.HasIndex("StudentID");

                    b.ToTable("Grade");

                    b.HasData(
                        new
                        {
                            GradeID = 1L,
                            DisciplineID = 2L,
                            StudantGrade = 7.2000000000000002,
                            StudentID = 1L
                        },
                        new
                        {
                            GradeID = 2L,
                            DisciplineID = 2L,
                            StudantGrade = 4.2300000000000004,
                            StudentID = 2L
                        });
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Students.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 2L,
                            Name = "Marco Bagdal 3",
                            Period = "Manha",
                            Picture = "Marco.png",
                            RA = "123456"
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            Name = "Carlos Rodrigues",
                            Period = "Tarde",
                            Picture = "carlos.jpg",
                            RA = "654321"
                        });
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Disciplines.Discipline", b =>
                {
                    b.HasOne("Fullbar.Entities.Models.Courses.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Disciplines.Grade", b =>
                {
                    b.HasOne("Fullbar.Entities.Models.Disciplines.Discipline", "Discipline")
                        .WithMany("Grades")
                        .HasForeignKey("DisciplineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fullbar.Entities.Models.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Students.Student", b =>
                {
                    b.HasOne("Fullbar.Entities.Models.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Courses.Course", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Fullbar.Entities.Models.Disciplines.Discipline", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
