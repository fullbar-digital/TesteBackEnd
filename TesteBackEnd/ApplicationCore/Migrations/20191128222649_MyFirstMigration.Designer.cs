// <auto-generated />
using System;
using ApplicationCore.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApplicationCore.Migrations
{
    [DbContext(typeof(TesteBackEndContext))]
    [Migration("20191128222649_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApplicationCore.Domain.Course", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnName("Ativo");

                    b.Property<DateTime>("Created")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Updated")
                        .HasColumnName("DataAlteracao");

                    b.HasKey("Id");

                    b.ToTable("Curso","dbo");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Administração",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = (short)2,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Ciências Contábeis",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = (short)3,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Ciências Econômicas",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = (short)4,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Comércio Exterior",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = (short)5,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Design de Moda",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = (short)6,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Gastronomia",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = (short)7,
                            Active = true,
                            Created = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398),
                            Name = "Gestão Comercial",
                            Updated = new DateTime(2019, 11, 28, 19, 26, 48, 766, DateTimeKind.Local).AddTicks(6398)
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CourseId")
                        .HasColumnName("CursoId");

                    b.Property<DateTime>("Created")
                        .HasColumnName("DataCriacao");

                    b.Property<decimal>("Grade")
                        .HasColumnName("Nota")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasMaxLength(50);

                    b.Property<string>("Ra")
                        .IsRequired()
                        .HasColumnName("Ra")
                        .HasMaxLength(20);

                    b.Property<bool>("Status")
                        .HasColumnName("Status");

                    b.Property<DateTime>("Updated")
                        .HasColumnName("DataAlteracao");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Aluno","dbo");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Student", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("ApplicationCore.Domain.Component.Period", "Period", b1 =>
                        {
                            b1.Property<int>("StudentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime?>("End")
                                .IsRequired()
                                .HasColumnName("PeriodoFinal");

                            b1.Property<DateTime?>("Start")
                                .IsRequired()
                                .HasColumnName("PeriodoInicial");

                            b1.HasKey("StudentId");

                            b1.ToTable("Aluno","dbo");

                            b1.HasOne("ApplicationCore.Domain.Student")
                                .WithOne("Period")
                                .HasForeignKey("ApplicationCore.Domain.Component.Period", "StudentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
